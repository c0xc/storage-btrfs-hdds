#!/usr/bin/env bash

[[ "$BTRFS_MOUNTPOINT" == "" ]] && BTRFS_MOUNTPOINT="/data"

# Check dependencies
for d in sudo btrfs udevadm grep cut xargs awk printf column parted lsblk; do
    if ! type $d >/dev/null 2>&1; then
        echo "Dependency not found: $d" >&2
        exit 1
    fi
done

# Helper: Device (/dev/sdX) -> serial no
function get_serial()
{
    local device=$1
    if [ ! -e "$device" ]; then
        echo
    fi
    udevadm info --query=all --name="$device" | grep ID_SERIAL_SHORT= | cut -d'=' -f2
}

# Helper: Device (/dev/sdX) -> path
function get_path()
{
    local device=$1
    if [ ! -e "$device" ]; then
        echo
    fi
    udevadm info --query=all --name="$device" | grep ID_PATH= | cut -d'=' -f2
}

# Get all drives
all_drives=()
for d in $(lsblk -dpn -o NAME); do
    all_drives+=($d)
done

# All BTRFS drives
declare -a btrfs_drives=()
declare -A btrfs_hdd_uuid
declare -A btrfs_uuid_hdd
declare -A btrfs_uuid_label
while IFS='' read -r line; do
    uuid=$(echo "$line" | awk '{print $4}')
    label=$line
    label=${label#*"'"}; label=${label%"'"*}
    btrfs_uuid_label["$uuid"]=$label
    if [ -z "$uuid" ]; then
        continue
    fi
    while IFS= read -r line; do
        line=$(echo "$line" | awk '{$1=$1};1')
        device=$(echo "$line" | grep -Po '(/dev[/\w]+)')
        btrfs_drives+=($device)
        btrfs_uuid_hdd["$uuid"]=$device
        btrfs_hdd_uuid["$device"]=$uuid
    done <<< "$(sudo btrfs filesystem show "$uuid" | grep -E '(devid|\*)')"
done <<< "$(sudo btrfs filesystem show | grep ^Label)"

# All other drives
non_btrfs_drives=()
for i in "${all_drives[@]}"; do
    is_btrfs=0
    for j in "${btrfs_drives[@]}"; do
        if [ "$i" == "$j" ]; then
	    is_btrfs=1
	fi
    done
    if [ $is_btrfs -eq 0 ]; then
        non_btrfs_drives+=($i)
    fi
done

# List all drives
(echo -e "HDD\tBTRFS\tSerial\tPath\tCapacity\tPartitions"
for i in "${all_drives[@]}"; do
    # Basic info
    drive=$i
    btrfs_uuid=${btrfs_hdd_uuid["$drive"]:- }
    btrfs_label=${btrfs_uuid_label["$btrfs_uuid"]:- }
    serial=$(get_serial "$drive")
    path=$(get_path "$drive")

    # Capacity
    capacity=$(lsblk --output SIZE -n -d "$drive")
    capacity=$(echo "$capacity" | tr -d '[:space:]')

    # Partitions
    parted_lines=$(sudo parted -sm "$drive" print 2>/dev/null | grep ^[0-9]:)
    parts_count=0
    parts_str=
    while IFS= read -r line; do
        if [ -z "$line" ]; then continue; fi
        ((parts_count++))
        fs=$(echo "$line" | cut -f5 -d":")
        fs=${fs:-?}
        if [ -n "$parts_str" ]; then parts_str="$parts_str, "; fi
        parts_str="$parts_str$fs"
    done <<< "$parted_lines"
    if [ -n "$parts_str" ]; then
        parts_str="$parts_count ($parts_str)"
    else
        parts_str="$parts_count"
    fi

    # Print line
    echo -e "$drive\t$btrfs_label\t$serial\t$path\t$capacity\t$parts_str"
done
) | column -t -s $'\t'



